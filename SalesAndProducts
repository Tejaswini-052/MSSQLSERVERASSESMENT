create database ProductOrder;
use ProductOrder;
drop table 

create table products (
    product_code varchar(20) primary key,
    product_name varchar(100),
    price int,
    product_remaining int,
	product_sold int
);


insert into products (product_code, product_name, price, product_remaining,product_sold) values ('P1', 'iPhone 13 Pro Max',1200,5,195),
    ('P2', 'AirPods Pro',279,10,90),
    ('P3', 'MacBook Pro 16',5000,2,48),
    ('P4', 'iPad Air',650,1,9);


create table SALES (
    order_id int primary key,
    order_date DATE,
	product_code varchar(20),
    quantity_ordered int,
    sales_price real
);

insert into SALES (order_id ,order_date,product_code,quantity_ordered,sales_price) values (1,'2022-01-10','P1',100,120000),
    (2,'2022-01-20','P1',50,60000),
    (3,'2022-02-05','P1',45,540000),
    (4,'2022-01-15','P2',50,13950),
    (5,'2022-03-25','P2',40,11160),
    (6,'2022-02-25','P3',10,50000),
    (7,'2022-03-15','P3',10,50000),
	(8,'2022-03-25','P3',20,100000),
	(9,'2022-04-21','P3',8,40000),
	(10,'2022-04-27','P4',9,5850);

select * from products;

//Views

create view remaining 
as
select product_name, product_remaining + 10 as product_remaining from products;

select * from remaining;

create view salesprice 
as
select product_name,sales_price from sales ,products where sales.product_code=products.product_code;

select * from salesprice;


create view marchsales
as
select * from sales where order_date >= '2022-03-01' AND order_date < '2022-04-01';

select * from marchsales;


/*stored procedure*/

create ProcessProductSale
    @product_code varchar(20),
    @quantity_ordered int
as
begin
    IF @product_code = 'P1'
        update products set product_sold = product_sold + @quantity_ordered where product_code = @product_code
        insert into sales(order_date, product_code, quantity_ordered, sales_price) values (GETDATE(), @product_code, @quantity_ordered, (select sales_price from sales where product_code = @product_code) * @quantity_ordered)
end

exec ProcessProductSale 'P1',1; 
select * from sales;


create procedure availableProduct
    @product_code varchar(20),
    @quantity_ordered int
as
begin
    declare @remaining_quantity int
    select @remaining_quantity = product_remaining from products where product_code = @product_code

    if @remaining_quantity >= @quantity_ordered
       
        update products set product_remaining = product_remaining - @quantity_ordered,product_sold = product_sold + @quantity_ordered where product_code = @product_code

        insert into SALES (order_date, product_code, quantity_ordered, sales_price) values (GETDATE(), @product_code, @quantity_ordered, (SELECT sales_price FROM sales WHERE product_code = @product_code) * @quantity_ordered)
end

exec availableProduct 'P1',1;
