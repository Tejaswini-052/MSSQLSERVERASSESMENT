 create database LMS_DB;

 create table LMS_BOOK_ISSUE(
 book_issue_no int primary key,
 memeber_id varchar(10),
 book_code varchar(10),
 date_issue date,
 date_return date,
 date_returned date,
 fine_range varchar(3)
 );

 insert into LMS_BOOK_ISSUE values(1,'LM001','BL000010','2012-05-01','2012-05-16','2012-05-16','R0'),
               (2,'LM002','BL000002','2012-05-01','2012-05-06','2012-05-16','R2'),
			   (3,'LM003','BL000007','2012-04-01','2012-04-16','2012-04-20','R1'),
			   (4,'LM004','BL000005','2012-04-01','2012-04-16','2012-04-20','R1'),
			   (5,'LM005','BL000008','2012-05-01','2012-03-30','2012-04-15','R1'),
			   (6,'LM005','BL000008','2012-04-20','2012-05-05','2012-05-05','R0'),
			   (7,'LM003','BL000007','2012-04-22','2012-05-07','2012-05-25','R4');

create table LMS_MEMBERS(
memeber_id varchar(10) primary key,
member_name varchar(30),
city varchar(20),
date_register date,
date_expire date,
memebership_status varchar(15)
);
 
 insert into LMS_MEMBERS values
           ('LM001','AMIT','CHENNAI','2012-02-12','2013-02-11','Temporary'),
           ('LM002','ABDHUL','DELHI','2012-04-10','2013-04-09','Temporary'),
		   ('LM003','GAYAN','CHENNAI','2012-05-13','2013-05-12','Permanent'),
		   ('LM004','RADHA','CHENNAI','2012-04-22','2013-04-21','Temporary'),
		   ('LM005','GURU','BANGALORE','2012-03-30','2013-05-16','Temporary'),
		   ('LM006','MOHAN','CHENNAI','2012-04-12','2013-05-16','Temporary');

create table LMS_BOOK_DETAILS(
book_code varchar(10) primary key,
book_title varchar(50),
category varchar(15),
author varchar(30),
publication varchar(30),
publish_date date,
book_edition int,
price numeric(8,2),
rack_num varchar(3),
date_arrival date,
supplier_id varchar(10)
);

insert into LMS_BOOK_DETAILS values
     ('BL000010','Java For Dummies','JAVA','Paul J. Deitel','Prentice Hall','1999-12-10',6,575.00,'A1','2011-05-10','S01'),
	 ('BL000002','Java:The Complete Reference','JAVA','Herbert Schildt','Tata Mcgraw Hill','2011-10-10',5,750.00,'A1','2011-05-10','S03'),
	 ('BL000003','Java How To Do Programming','JAVA','Paul J. Deitel','Prentice Hall','1999-05-10',6,600.00,'A1','2012-05-10','S01'),
	 ('BL000004','Java:The Complete Reference ','JAVA','Herbert Schildt','Tata Mcgraw Hill','2011-10-10',5,750.00,'A1','2012-05-11','S01'),
	 ('BL000005','Java How To Do Programming','JAVA','Paul J. Deitel','Prentice Hall','1999-12-10',6,600.00,'A1','2012-05-11','S01'),
	 ('BL000006','Java:The Complete Reference','JAVA','Herbert Schildt','Tata Mcgraw Hill','2011-10-10',5,750.00,'A1','2012-05-12','S03'),
	 ('BL000007','Let Us C','C','Yashavant Kanetkar','BPB Publications','2010-12-11',9,500.00,'A3','2010-11-03','S03'),
	 ('BL000008','Let Us C','C','Yashavant Kanetkar','BPB Publications','2010-05-12',9,500.00,'A3','2010-08-09','S04'),
	 ('BL000009','Let Us C#','C','Yashavant Kanetkar','BPB Publications','2010-05-12',9,550.00,'A3','2011-08-09','S04'),
	 ('BL0000011','Let Us C++','C','Yashavant Kanetkar','BPB Publications','2010-05-12',9,650.00,'A3','2011-08-09','S04');

create table LMS_FINE_DETAILS(
fine_range varchar(3) primary key,
fine_amount numeric(10,2)
);

insert into LMS_FINE_DETAILS values
              ('R0',0.00),
			  ('R1',20.00),
			  ('R2',50.00),
			  ('R3',75.00),
			  ('R4',100.00),
			  ('R5',150.00),
			  ('R6',200.00);
			  
create table LMS_SUPPLIERS_DETAILS(
supplier_id varchar(3) primary key,
supplier_name varchar(30),
address varchar(50),
contact int,
email varchar(15)
);

insert into LMS_SUPPLIERS_DETAILS values
     ('S01','SINGAPORE SHOPEE','CHENNAI',98941235,'sing@gmail.com'),
	 ('S02','JK Stores','MUMBAI',99401234,'jks@yahoo.com'),
	 ('S03','ROSE BOOK STORE','TRIVANDRUM',94444112,'rose@gmail.com'),
	 ('S04','KAVARI STORE','DELHI',86300014,'kavi@redif.com'),
	 ('S05','EINSTEN BOOK GALLERY','US',95420000,'eingal@aol.com'),
	 ('S06','AKBAR STORE','MUMBAI',78556231,'akbakst@aol.com');

--1
desc LMS_BOOK_DETAILS;
--2
select * from LMS_FINE_DETAILS;

--3

create procedure LivingIncity
@cityname varchar(20)
as 
begin
select member_name from LMS_MEMBERS where city=@cityname;
end

exec LivingIncity 'CHENNAI';


--4
create function Membership(@memberval varchar(20))
returns table 
as
return select memeber_id,member_name,memebership_status  from LMS_MEMBERS where memebership_status=@memberval;

select * from Membership('Permanent');

--5
create view BookCode
as
select lm.memeber_id,member_name from LMS_MEMBERS lm join LMS_BOOK_ISSUE lb on lm.memeber_id=lb.memeber_id and lb.book_code='BL000002';

select * from BookCode;

--6
select book_code, book_title, author from LMS_BOOK_DETAILS where author like 'P%';

--7
create function category(@categoryVal varchar(20))
returns table 
as
return select  count(category) as NO_OF_BOOKS from LMS_BOOK_DETAILS where category=@categoryVal;

select * from category('JAVA');

--8
select  category ,count(category) as NO_OF_BOOKS from LMS_BOOK_DETAILS group by category ;

--9
create function Publication(@pub varchar(20))
returns table
as
return select count(*) as NO_OF_BOOKS from LMS_BOOK_DETAILS where publication=@pub;

select * from Publication('Prentice Hall');

--10
create view IssuedBookApril
as
select bi.book_code, book_title from LMS_BOOK_ISSUE as bi join LMS_BOOK_DETAILS as bd on bi.book_code=bd.book_code where bi.date_issue='2012-04-01';

select * from IssuedBookApril;

--11
select memeber_id,member_name ,date_register,date_expire from LMS_MEMBERS where date_expire<'2013-04-01';


--12

select memeber_id,member_name,date_register,memebership_status from LMS_MEMBERS where date_register<'2012-03-01' and memebership_status='Temporary';

--13

select memeber_id,member_name from LMS_MEMBERS where city in('CHENNAI','DELHI');

--14

select concat(book_title,'_is_written_by_',author) as BookDetails from LMS_BOOK_DETAILS;

--15

create view AveragejavaCategory
as
select AVG(price) as AveragePrice from LMS_BOOK_DETAILS where category='JAVA';

select * from AveragejavaCategory;

--16
select supplier_id,supplier_name,email from LMS_SUPPLIERS_DETAILS where email like '%@gmail%';

--17 no

create procedure contactdetailsPro(
@contact int,
@email varchar(20))
as
begin
if @contact is null
begin
    select email from LMS_SUPPLIERS_DETAILS;
end
if @email is NULL
    begin
	  select address from LMS_SUPPLIERS_DETAILS;
	end
end

exec contactdetailsPro 98941235,'sing@gmail.com';

--18
select bi.memeber_id,m.member_name,bd.book_code,bd.book_title from LMS_BOOK_ISSUE bi join LMS_MEMBERS m on bi.memeber_id=m.memeber_id join LMS_BOOK_DETAILS bd on bi.book_code=bd.book_code;

--19

select bi.memeber_id,member_name,fd.fine_range ,fine_amount from LMS_MEMBERS m join LMS_BOOK_ISSUE bi on m.memeber_id=bi.memeber_id join LMS_FINE_DETAILS fd on bi.fine_range=fd.fine_range where fine_amount<100;

--20

select book_code ,book_title,rack_num from LMS_BOOK_DETAILS where rack_num='A1' order by book_title asc;

--21

select bi.memeber_id,member_name,date_register from LMS_MEMBERS m left join LMS_BOOK_ISSUE bi on m.memeber_id=bi.memeber_id where bi.memeber_id is null;

--22 not right
select bi.memeber_id,member_name from LMS_MEMBERS m join LMS_BOOK_ISSUE bi on m.memeber_id=bi.memeber_id where bi.fine_range is null and date_returned <'2012-01-01';

--23
 select rack_num ,count(*) as NOOFBOOKS from LMS_BOOK_DETAILS group by rack_num order by rack_num asc;

 --24
 select book_issue_no,member_name,date_register,date_expire,book_title,category,author, price, bi.date_issue, date_return,date_returned,fine_amount from LMS_BOOK_ISSUE bi 
 join LMS_MEMBERS m on bi.memeber_id=m.memeber_id join LMS_BOOK_DETAILS bd on bi.book_code=bd.book_code 
 join LMS_FINE_DETAILS fd on bi.fine_range=fd.fine_range;

 --25 error
 select bi.memeber_id, m.member_name, count(bi.book_issue_no) as Remainingbook from LMS_MEMBERS m join LMS_BOOK_ISSUE bi on  m.memeber_id=bi.memeber_id;

 --26
alter function topthreedata()
returns table
as
return 
select * from LMS_SUPPLIERS_DETAILS where supplier_id  in ('S01','S02','S03');


select * from topthreedata();

--27
create function ExcludingFirstThree()
returns table
as
return
select * from LMS_SUPPLIERS_DETAILS where supplier_id not in ('S01','S02','S03');

select * from ExcludingFirstThree();

--28
exec sp_rename ' LMS_MEMBERS' ,'LMS_MEMBERS_DETAILS';

--29 mix
-- delete all the rows of the table LMS_FINE_DETAILS
create trigger Todelete
on LMS_FINE_DETAILS
for delete 
as
begin
select fine_range  from deleted 
print 'Allowed to delete'
end

create procedure todelete
as
begin
  delete from LMS_FINE_DETAILS where fine_range between 'R0' and 'R6'
end;

exec todelete;

update LMS_FINE_DETAILS set fine_range=null ;
update LMS_FINE_DETAILS set fine_amount=null;

--30
select distinct book_title from LMS_BOOK_DETAILS where rack_num between 'A1' and 'A3';
